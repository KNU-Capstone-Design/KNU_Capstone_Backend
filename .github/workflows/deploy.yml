name: Deploy Code and Swagger

on:
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - 'swagger/openapi.yaml'
      - 'docker-compose.yml'
      - 'Dockerfile'
      - 'package.json'
      - 'package-lock.json'
      - 'app.js'

jobs:
  check-scope:
    runs-on: ubuntu-latest
    outputs:
      is_swagger: ${{ steps.check.outputs.swagger }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Check if Swagger file was changed
        id: check
        run: |
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q 'swagger/openapi.yaml'; then
            echo "swagger=true" >> $GITHUB_OUTPUT
          else
            echo "swagger=false" >> $GITHUB_OUTPUT
          fi

  deploy-swagger:
    needs: check-scope
    if: needs.check-scope.outputs.is_swagger == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Deploy Swagger UI
        run: |
          curl -L https://github.com/swagger-api/swagger-ui/archive/refs/heads/master.zip -o swagger-ui.zip
          unzip swagger-ui.zip
          rm -rf docs
          mkdir docs
          cp -r swagger-ui-master/dist/* docs/
          cp swagger/openapi.yaml docs/openapi.yaml
          sed -i 's|https://petstore.swagger.io/v2/swagger.json|openapi.yaml|' docs/swagger-initializer.js
          touch docs/.nojekyll

      - name: Commit & Push to GitHub Pages
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git add docs/
          git commit -m "Swagger UI 자동 배포" || echo "변경 사항 없음"
          git push origin HEAD || echo "❌ push 실패"

  deploy-code:
    needs: check-scope
    if: needs.check-scope.outputs.is_swagger != 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Debug ssh key
        run: |
          if [ -z "${{ secrets.AZURE_SSH_KEY }}" ]; then
            echo "SSH 키가 비어 있습니다"
          else
            echo "SSH 키가 설정되어 있습니다."
            echo "SSH 키 길이: $(echo '${{ secrets.AZURE_SSH_KEY }}' | wc -c) bytes"
          fi

      - name: Debug SSH username
        run: |
          echo "SSH 유저명은: ${{ secrets.AZURE_USER }}"

      - name: SSH into Azure VM and deploy code
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.AZURE_VM_IP }}
          username: ${{ secrets.AZURE_USER }}
          key: ${{ secrets.AZURE_SSH_KEY }}
          script: |
            cd ~/KNU_Capstone_Backend
            git pull origin main
            docker-compose down
            docker-compose up -d --build