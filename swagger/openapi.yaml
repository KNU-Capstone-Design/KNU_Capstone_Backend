openapi: 3.0.0
info:
  title: Capstone
  version: 1.0.1
  description: 완전한 RESTful 원칙에 기반한 이메일 구독 등록, 해지 및 문제/답변/체점 API입니다.

tags:
  - name: Subscribe
    description: 이메일 구독 등록 및 해지
  - name: Questions
    description: 문제 발송
  - name: Answers
    description: 사용자 답변 제출 및 이력 조회
  - name: Grades
    description: AI 채점 및 결과 메일 발송

paths:

  /api/subscribers:
    post:
      tags:
        - Subscribe
      summary: 구독 등록
      description: 사용자 이메일을 받아 새로운 구독자를 생성합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
      responses:
        '201':
          description: 구독 등록 완료
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 이메일이 성공적으로 등록되었습니다.
                  email:
                    type: string
                    example: user@example.com
        '409':
          description: 이미 등록된 이메일
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 이미 구독 중인 이메일입니다.
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 서버 오류

  /api/subscribers/{email}:
    patch:
      tags:
        - Subscribe
      summary: 구독 해지
      description: 이메일 주소를 경로 파라미터로 받아 구독을 해지합니다.(DB에서 이메일 삭제 x)
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
            format: email
            example: user@example.com
      responses:
        '200':
          description: 구독 해지 처리 결과
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  email:
                    type: string
              examples:
                success:
                  summary: 정상적으로 구독이 해지된 경우
                  value:
                    message: 이메일 구독이 성공적으로 해지되었습니다.
                    email: user@example.com
                already_unsubscribed:
                  summary: 이미 구독이 해지된 경우
                  value:
                    message: 해당 이메일은 이미 구독 해지된 상태입니다.
                    email: user@example.com

        '404':
          description: 등록된 이메일이 없을 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 해당 이메일은 구독되어 있지 않습니다.
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 서버 오류

  /api/questions:
    post:
      tags:
        - Questions
      summary: 문제 발송
      description: 등록된 모든 구독자에게 문제 메일을 발송합니다.
      responses:
        '200':
          description: 문제 메일 발송 완료
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 메일 발송 완료.
        '500':
          description: 서버 오류
          content:
            application/jso2n:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 서버 오류

  /api/answers:
    post:
      tags:
        - Answers
      summary: 사용자 답변 제출
      description: 사용자가 받은 문제에 대한 답변을 제출합니다. 답변은 500자 이내로 받아야하고 토큰 인증 또한 필요.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - questionId
                - answer
              properties:
                questionId:
                  type: string
                  example: q001
                answer:
                  type: string
                  example: "function solution() { return true; }"
      responses:
        '200':
          description: 답변 제출 완료
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 답변 제출 완료
        '401':
          description: 인증 오류
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 인증 오류
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 서버 오류

    get:
      tags:
        - Answers
      summary: 사용자 문제 풀이 결과 조회
      description: 사용자가 제출한 답변 이력을 조회합니다. 토큰으로 판별되며, 별도의 쿼리는 필요하지 않습니다.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 문제 풀이 결과 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    questionId:
                      type: string
                    answer:
                      type: string
                    score:
                      type: number
                    feedback:
                      type: string
        '401':
          description: 인증 오류
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 인증 오류
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 서버 오류

  /api/grades:
    post:
      tags:
        - Grades
      summary: AI 채점 요청
      description: 사용자의 답변을 Groq API를 통해 채점하며, 점수와 함께 잘한 점, 개선할 점, 틀린 점을 항목별로 제공합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - questionId
                - answer
              properties:
                questionId:
                  type: string
                  example: Network-q001
                answer:
                  type: string
                  example: OSI 7계층은 통신 과정을 7단계로 나눈 개념입니다. 각각은 물리, 데이터링크, 네트워크, 전송, 세션, 표현, 응용 계층으로 구성됩니다.
      responses:
        '200':
          description: AI 채점 결과 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  score:
                    type: number
                    example: 78
                  feedback:
                    type: object
                    properties:
                      wellDone:
                        type: string
                        example: "OSI 7계층의 구성 계층을 정확히 나열하였습니다."
                      improve:
                        type: string
                        example: "각 계층의 역할에 대한 간단한 설명이 있었다면 더 완성도 있는 답변이 되었을 것입니다."
                      mistake:
                        type: string
                        example: "없음"
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 서버 오류

  /api/auth/token:
    post:
      summary: 이메일 기반 임시 토큰 요청
      description: 등록된 이메일 주소로 질문을 받았을 때, 사용자가 '답변하기' 버튼, '오답노트 보기' 버튼,  을 클릭하면 호출되는 API로 해당 이메일에 대한 임시 토큰을 생성하여 이후 인증에 사용됨.
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  format: email
                  example: temp@temp.com
      responses:
        '200':
          description: 토큰 생성 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: a9f4b3c1d22e1cfa8b9
                  message:
                    type: string
                    example: 임시 토큰이 발급되었습니다.
        '400':
          description: 이메일 누락
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 이메일이 누락되었습니다.
        '500':
          description: 서버 에러
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 서버 오류

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: Token